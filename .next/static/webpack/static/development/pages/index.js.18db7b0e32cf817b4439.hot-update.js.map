{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.18db7b0e32cf817b4439.hot-update.js","sources":["webpack:///./components/input.js"],"sourcesContent":["import marked from 'marked';\r\n\r\nfunction input(props){\r\n\r\n    const htmlValue = `# One hashtag = H1\\r\r\n\r\n## Two hashtags = H2\\r\r\n\r\n### Three hashtags = H3\\r\r\n\r\n#### Four hashtags = H4\\r\r\n\r\n##### Five hashtags = H5\\r\r\n\r\n###### Six hashtags = H6\\r\r\n\r\n\r\n\r\n\r\nWrap text in asterisks = *Italicized Text*\\r\r\n\r\nWrap text in double asterisks = **Bold Text**\\r\r\n\r\n\r\n\r\n\r\nThree underscores or asterisks or dashes = \\<hr\\> (horizontal line)\\r\r\n*Note: the three underscores or asterisks or dashes must be the only characters on the line for this to work*\r\n\r\n___\r\n***\r\n---\r\n\r\n\r\n\r\n\r\nWrap text in backticks = \\` Text color and background color are switched \\`\\r\r\n\r\nWrap text in square brackets followed by url wrapped in parentheses = [[link] (url)](https://en.wikipedia.org/wiki/Hyperlink)\\r\r\n*Note: Don't put any space between the square brackets and the parentheses*\\r\r\n\r\n> Start line with one \\> character = Indented blockquote\r\n\r\n> > Start line with two \\> characters = Double indented blockquote\r\n\r\n\r\n---\r\n\r\n\r\n\r\n1. Start each line with a number + a period + a space + Your text= Numbered List\r\n3. Number + Period = &#50;. Your text\r\n4. (&#52;.) You can use any number you want\r\n4. (&#52;.) Markdown will still show the next number\r\n10. (&#49;&#48;.) Markdown will still show the next sequential number\r\n\r\n- Start each line with a dash plus a space = Bulleted list\r\n- Start each line with a dash plus a space = Bulleted list\r\n- Start each line with a dash plus a space = Bulleted list\r\n- Start each line with a dash plus a space = Bulleted list\r\n\r\n\r\n\r\n---\r\n\r\n\r\n\r\n**INPUT:**\r\n\r\n&#96; &#96; &#96; \r\nvar code = function(){\r\n> alert( \"Wrap you code in a pair of triple \\r backticks to create a multi-line code block\" ); \\r\r\n> //To indent lines of code use tabs\r\n\r\n};\r\n\r\ncode();\r\n&#96; &#96; &#96;\r\n\r\n**OUTPUT:**\r\n\r\n\\`\\`\\` \r\nvar code = function(){\r\n    alert( \"Wrap you code in a pair of triple \r\n    backticks to create a multi-line code block\" );\r\n    //To indent lines of code use tabs\r\n};\r\n\r\ncode();\r\n\\`\\`\\`\r\n\r\n\r\n\r\n---\r\n\r\n\r\n\r\n**INPUT:**\r\n\r\n&#33;&#91; Description of the image &#93;&#40; the image URL &#41;\r\n\r\n**OUTPUT:**\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n\r\n\r\n\r\n---\r\n\r\n\r\n\r\n**INPUT:**\r\n\r\n&#124; To Create &#124; A Table: &#124; Wrap Text &#124; In Pipe (or vertical slash) symbols &#124;\r\n&#124; - &#124;- &#124; - &#124; - &#124;\r\n&#124; On the 2nd line &#124; Type Pipe + Dash &#124; Once For Every &#124; Table Cell in the Row &#124;\r\n&#124; For Every &#124; Row &#124;  Wrap Text &#124; In Pipes &#124;\r\n&#124; If There Are Less Cells &#124; The Table Will Automatically &#124; Fill In Blank Cells &#124;\r\n\r\n**OUTPUT:**\r\n\r\n| To Create | A Table: | Wrap Text | In Pipe (or vertical slash) symbols |\r\n|- | - | -| -|\r\n| On the 2nd line | Type Pipe + Dash | Once For Every | Table Cell in the Row |\r\n| For Every | Row |  Wrap Text | In Pipes |\r\n| If There Are Less Cells | The Table Will Automatically | Fill In Blank Cells |\r\n\r\n\r\n\r\n\r\n`;\r\n\r\n    return (\r\n        <div id='input'>\r\n            <div class=\"flexRow\">\r\n                <h4><strong>INPUT:</strong></h4>\r\n                <select>\r\n                    <option>Select Me</option>\r\n                </select>\r\n            </div>\r\n            <textarea\r\n                id=\"editor\"\r\n                defaultValue={htmlValue}\r\n                onChange={props.change}\r\n             />\r\n            <style jsx>\r\n                {`\r\n                    .flexRow {\r\n                        width: 100%;\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        justify-content: start;\r\n                    }\r\n                    .flexRow > h4 {\r\n                        text-align: left;\r\n                        display: inline-block!important;\r\n                    }\r\n                    #input > textarea {\r\n                        width: 800px;\r\n                        height: 200px;\r\n                        margin: auto;\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAgIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAiCA;AACA;AACA;;;;A","sourceRoot":""}