{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.dd989d80597fb1032cd6.hot-update.js","sources":["webpack:///./components/markdown.js"],"sourcesContent":["const markdown = {\r\n    h1: \"# One hashtag = H1\",\r\n    h2: \"## Two hashtags = H2\",\r\n    h3: \"### Three hashtags = H3\",\r\n    h4: \"#### Four hashtags = H4\",\r\n    h5: \"##### Five hashtags = H5\",\r\n    h6: \"###### Six hashtags = H6\",\r\n    italic: \"Wrap text in asterisks = *Italicized Text*\",\r\n    bold: \"Wrap text in double asterisks = **Bold Text**\",\r\n    horizontal_line: \"A line with three underscores with no spaces and no other characters\\r\\r**RESULT:**\\r___\\r\\r\\rA line with three asterisks with no spaces and no other characters\\r\\r**RESULT:**\\r***\\r\\r\\rA line with three dashes with no spaces and no other characters\\r\\r**RESULT:**\\r\\r---\\r\\r\\r\",\r\n    single_line_code: \"With code that will fit onto a single line wrap the `code` in backticks\\r\\r\\rIf you have backticks in your code you can `` `escape your backticks in your code` `` by wrapping the code with double backticks instead of single backticks\\r*Make sure to leave a space between the double backticks and the single backtick.  If you don't the markdown editor will interpret this as a triple backtick which is used to mark a multi-line code block*\"\r\n}\r\n\r\nexport default markdown;\r\n    \r\n/*\r\nWrap text in square brackets followed by url wrapped in parentheses = [[link] (url)](https://en.wikipedia.org/wiki/Hyperlink)\\r\r\n*Note: Don't put any space between the square brackets and the parentheses*\\r\r\n\r\n> Start line with one \\> character = Indented blockquote\r\n\r\n> > Start line with two \\> characters = Double indented blockquote\r\n\r\n\r\n---\r\n\r\n\r\n\r\n1. Start each line with a number + a period + a space + Your text= Numbered List\r\n3. Number + Period = &#50;. Your text\r\n4. (&#52;.) You can use any number you want\r\n4. (&#52;.) Markdown will still show the next number\r\n10. (&#49;&#48;.) Markdown will still show the next sequential number\r\n\r\n- Start each line with a dash plus a space = Bulleted list\r\n- Start each line with a dash plus a space = Bulleted list\r\n- Start each line with a dash plus a space = Bulleted list\r\n- Start each line with a dash plus a space = Bulleted list\r\n\r\n\r\n\r\nWith code that will fit onto a single line wrap the code in `backticks`\\r\\r\\rIf you have backticks in your code you can `\\`escape\\`` them with a backslash before each backtick\r\n\r\n**INPUT:**\r\n\r\n&#96; &#96; &#96; \r\nvar code = function(){\r\n> alert( \"Wrap you code in a pair of triple \\r backticks to create a multi-line code block\" ); \\r\r\n> //To indent lines of code use tabs\r\n\r\n};\r\n\r\ncode();\r\n&#96; &#96; &#96;\r\n\r\n**OUTPUT:**\r\n\r\n\\`\\`\\` \r\nvar code = function(){\r\n    alert( \"Wrap you code in a pair of triple \r\n    backticks to create a multi-line code block\" );\r\n    //To indent lines of code use tabs\r\n};\r\n\r\ncode();\r\n\\`\\`\\`\r\n\r\n\r\n\r\n---\r\n\r\n\r\n\r\n**INPUT:**\r\n\r\n&#33;&#91; Description of the image &#93;&#40; the image URL &#41;\r\n\r\n**OUTPUT:**\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n\r\n\r\n\r\n---\r\n\r\n\r\n\r\n**INPUT:**\r\n\r\n&#124; To Create &#124; A Table: &#124; Wrap Text &#124; In Pipe (or vertical slash) symbols &#124;\r\n&#124; - &#124;- &#124; - &#124; - &#124;\r\n&#124; On the 2nd line &#124; Type Pipe + Dash &#124; Once For Every &#124; Table Cell in the Row &#124;\r\n&#124; For Every &#124; Row &#124;  Wrap Text &#124; In Pipes &#124;\r\n&#124; If There Are Less Cells &#124; The Table Will Automatically &#124; Fill In Blank Cells &#124;\r\n\r\n**OUTPUT:**\r\n\r\n| To Create | A Table: | Wrap Text | In Pipe (or vertical slash) symbols |\r\n|- | - | -| -|\r\n| On the 2nd line | Type Pipe + Dash | Once For Every | Table Cell in the Row |\r\n| For Every | Row |  Wrap Text | In Pipes |\r\n| If There Are Less Cells | The Table Will Automatically | Fill In Blank Cells |\r\n\r\n\r\n\r\n\r\n    ``\r\n}\r\n*/"],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}